{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"KICS (pronounced as 'kick-s') or Kicscan is an open source solution for static code analysis of Infrastructure as Code. K eeping I nfrastructure as C ode S ecure (in short KICS ) is a must-have for any cloud native project. With KICS, finding security vulnerabilities, compliance issues, and infrastructure misconfigurations happens early in the development cycle, when fixing these is straightforward and cheap. It is as simple as running a CLI tool, making it easy to integrate into any project CI. Supported Platforms KICS scans and detects issues in following Infrastructure as Code solutions: More solutions, such as Docker, Ansible, AWS CloudFormation and others are on the roadmap . Getting Started Setting up and using KICS is super-easy. First, see how to install and get KICS running . Next, check how you can easily integrate it into your CI for any project. Eventually, explore the output results format and quickly fix the issues detected. How it Works What makes KICS really powerful and popular is its built-in extensibility. This extensibility is achieved by: Fully customizable and adjustable heuristics rules, called queries . These can be easily edited, extended, and added. Robust but yet simple architecture , which allows quick addition of support for new Infrastructure as Code solutions. Contribution KICS is a true community project. It's built as an open source from day one, and anyone can find his own way to contribute to the project. Check out how , within just minutes, you can start making a difference, by sharing your expertise with a community of thousands of security experts and software developers. How can I help?! Take me to the repo on GitHub! About the Project The KICS project is powered by Checkmarx , global leader of Application Security Testing. Read more about Infrastructure as Code , Infrastructure as Code Testing and Checkmarx. KICS will always stay an open source and free project for the benefit of global software industry community. We believe that when Software is Everywhere, Security is Everything . Now, Software = Security . Looking for more info? Explore KICS project in details: Roadmap Project plans Issues","title":"Home"},{"location":"#supported-platforms","text":"KICS scans and detects issues in following Infrastructure as Code solutions: More solutions, such as Docker, Ansible, AWS CloudFormation and others are on the roadmap .","title":"Supported Platforms"},{"location":"#getting-started","text":"Setting up and using KICS is super-easy. First, see how to install and get KICS running . Next, check how you can easily integrate it into your CI for any project. Eventually, explore the output results format and quickly fix the issues detected.","title":"Getting Started"},{"location":"#how-it-works","text":"What makes KICS really powerful and popular is its built-in extensibility. This extensibility is achieved by: Fully customizable and adjustable heuristics rules, called queries . These can be easily edited, extended, and added. Robust but yet simple architecture , which allows quick addition of support for new Infrastructure as Code solutions.","title":"How it Works"},{"location":"#contribution","text":"KICS is a true community project. It's built as an open source from day one, and anyone can find his own way to contribute to the project. Check out how , within just minutes, you can start making a difference, by sharing your expertise with a community of thousands of security experts and software developers. How can I help?! Take me to the repo on GitHub!","title":"Contribution"},{"location":"#about-the-project","text":"The KICS project is powered by Checkmarx , global leader of Application Security Testing. Read more about Infrastructure as Code , Infrastructure as Code Testing and Checkmarx. KICS will always stay an open source and free project for the benefit of global software industry community. We believe that when Software is Everywhere, Security is Everything . Now, Software = Security . Looking for more info? Explore KICS project in details: Roadmap Project plans Issues","title":"About the Project"},{"location":"CONTRIBUTING/","text":"Contribution We would like to THANK YOU for considering contributing to KICS! KICS is a true community project. It's built as an open source from day one, and anyone can find his own way to contribute to the project. Within just minutes, you can start making a difference, by sharing your expertise with a community of thousands of security experts and software developers. Contribution Options Good news! You don't have to contribute code. There are plenty of ways you can contribute to KICS project: Reporting new bugs or issues Help triaging issues Improving and translating the documentation Volunteer to maintain the project Get Started! Follow the instructions below to setup local KICS development environment. Fork the kics repo on GitHub. Clone your fork locally: git clone https://github.com/Checkmarx/kics.git Create a branch for local development: git checkout -b <name-of-your-issue> Make your changes locally. Validate your changes to reassure they meet project quality and contribution standards: fancy local command goes here Commit your changes and push your branch to GitHub: git add . git commit git push --set-upstream origin <name-of-your-issue> Submit a pull request on GitHub website. Pull Request Guidelines Before you submit a pull request, please reassure that it meets these guidelines: All validations and tests passed locally. The pull request includes tests. The relevant docs are updated, whether you're pushing new functionality or updating a query.","title":"Contribution"},{"location":"CONTRIBUTING/#contribution","text":"We would like to THANK YOU for considering contributing to KICS! KICS is a true community project. It's built as an open source from day one, and anyone can find his own way to contribute to the project. Within just minutes, you can start making a difference, by sharing your expertise with a community of thousands of security experts and software developers.","title":"Contribution"},{"location":"CONTRIBUTING/#contribution-options","text":"Good news! You don't have to contribute code. There are plenty of ways you can contribute to KICS project: Reporting new bugs or issues Help triaging issues Improving and translating the documentation Volunteer to maintain the project","title":"Contribution Options"},{"location":"CONTRIBUTING/#get-started","text":"Follow the instructions below to setup local KICS development environment. Fork the kics repo on GitHub. Clone your fork locally: git clone https://github.com/Checkmarx/kics.git Create a branch for local development: git checkout -b <name-of-your-issue> Make your changes locally. Validate your changes to reassure they meet project quality and contribution standards: fancy local command goes here Commit your changes and push your branch to GitHub: git add . git commit git push --set-upstream origin <name-of-your-issue> Submit a pull request on GitHub website.","title":"Get Started!"},{"location":"CONTRIBUTING/#pull-request-guidelines","text":"Before you submit a pull request, please reassure that it meets these guidelines: All validations and tests passed locally. The pull request includes tests. The relevant docs are updated, whether you're pushing new functionality or updating a query.","title":"Pull Request Guidelines"},{"location":"about/","text":"About KICS Project About Checkmarx Checkmarx is the global leader in software security solutions for modern enterprise software development. Checkmarx delivers the industry\u2019s most comprehensive Software Security Platform that unifies with DevOps and provides static and interactive application security testing, software composition analysis and developer AppSec awareness and training programs to reduce and remediate risk from software vulnerabilities. Checkmarx is trusted by more than 40 percent of the Fortune 100 and half of the Fortune 50, including leading organizations such as SAP, Samsung and Salesforce.com. What is Infrastructure as Code Infrastructure as Code (IaC) is the creation, provisioning and configuration of software-defined compute (SDC), networkand storage infrastructure through machine-readable definition files, rather than physical hardware configuration or interactive configuration tools. IaC automates the manual tasks usually associated with computing infrastructure configuration and implementation. By doing this, you can: Speed up configuration and implementation of new computing infrastructure Reduce the cost and resource needed to scale and manage large infrastructure Eliminate the inconsistencies that inevitably occur when multiple individuals manually configure new equipment or applications. The core concepts of Infrastructure as Code are: Defined in code Stored in a repository Declarative or Imperative Idempotence and Consistency Push or Pull Main Benefits of Infrastructure as Code: Fully automated deployment Consistent environments Repeatable process Reusable components (\"DRY\") Documented Architecture What is Infrastructure as Code Testing Infrastructure as Code testing examines configuration definitions and scripts used to instantiate infrastructure to ensure the resulting resources are secure. IaC security testing tools must be able to consume configuration files and scripts in relevant formats, apply tests to ensure conformance with common configuration hardening standards (i.e., Center for Internet Security Benchmarks and many others), identify security issues associated with specific operational environments, identify embedded secrets, and perform other tests supporting organization-specific standards and compliance requirements. Optionally, tools can automatically remediate errors (e.g., changing read/write permissions on storage resources). This capability specifically examines IaC testing in the context of the development process, however tools may also support examination of deployed production instances and responding to issues identified in those systems.","title":"About"},{"location":"about/#about-kics-project","text":"","title":"About KICS Project"},{"location":"about/#about-checkmarx","text":"Checkmarx is the global leader in software security solutions for modern enterprise software development. Checkmarx delivers the industry\u2019s most comprehensive Software Security Platform that unifies with DevOps and provides static and interactive application security testing, software composition analysis and developer AppSec awareness and training programs to reduce and remediate risk from software vulnerabilities. Checkmarx is trusted by more than 40 percent of the Fortune 100 and half of the Fortune 50, including leading organizations such as SAP, Samsung and Salesforce.com.","title":"About Checkmarx"},{"location":"about/#what-is-infrastructure-as-code","text":"Infrastructure as Code (IaC) is the creation, provisioning and configuration of software-defined compute (SDC), networkand storage infrastructure through machine-readable definition files, rather than physical hardware configuration or interactive configuration tools. IaC automates the manual tasks usually associated with computing infrastructure configuration and implementation. By doing this, you can: Speed up configuration and implementation of new computing infrastructure Reduce the cost and resource needed to scale and manage large infrastructure Eliminate the inconsistencies that inevitably occur when multiple individuals manually configure new equipment or applications. The core concepts of Infrastructure as Code are: Defined in code Stored in a repository Declarative or Imperative Idempotence and Consistency Push or Pull Main Benefits of Infrastructure as Code: Fully automated deployment Consistent environments Repeatable process Reusable components (\"DRY\") Documented Architecture","title":"What is Infrastructure as Code"},{"location":"about/#what-is-infrastructure-as-code-testing","text":"Infrastructure as Code testing examines configuration definitions and scripts used to instantiate infrastructure to ensure the resulting resources are secure. IaC security testing tools must be able to consume configuration files and scripts in relevant formats, apply tests to ensure conformance with common configuration hardening standards (i.e., Center for Internet Security Benchmarks and many others), identify security issues associated with specific operational environments, identify embedded secrets, and perform other tests supporting organization-specific standards and compliance requirements. Optionally, tools can automatically remediate errors (e.g., changing read/write permissions on storage resources). This capability specifically examines IaC testing in the context of the development process, however tools may also support examination of deployed production instances and responding to issues identified in those systems.","title":"What is Infrastructure as Code Testing"},{"location":"architecture/","text":"Architecture KICS Architecture was built from the ground up with cloud-native mindset. It was designed for automation, handles state carefully and assumes that the only constant is change.","title":"Architecture"},{"location":"architecture/#architecture","text":"KICS Architecture was built from the ground up with cloud-native mindset. It was designed for automation, handles state carefully and assumes that the only constant is change.","title":"Architecture"},{"location":"getting-started/","text":"Installation There are multiple ways to get KICS up and running: Docker KICS is available as a Docker image and can be used as follows: docker pull checkmarx/kics:latest docker run -v {\u200b\u200b\u200b\u200bpath_to_local_folder_to_scan}\u200b\u200b\u200b\u200b:/path checkmarx/kics:latest -p \"/path\" -o \"/path/results.json\" You can provide your own path to the queries folder, otherwise the default folder will be used (default \"./assets/queries\") -q, --queries-path string path to directory with queries (default \"./assets/queries\" - built in the image) Binary KICS release process is pretty straightforward. When we're releasing a new version, we'll pack KICS executables for both Linux and Windows operating systems. Our security queries will be included in the ZIP files and tarballs, so that you can scan your IaC code with the out-of-the-box queries So all you need is: Go to KICS releases Download KICS binaries based on your OS Extract files Run kics executable with the cli options as decribed below (note that kics binary should be located in the same folder as queries folder) ./kics -p <path-of-your-project-to-scan> -o <output-results.json> Build from Sources Download and install Go from https://golang.org/dl/ Clone the repository: git clone https://github.com/Checkmarx/kics.git cd kics Kick a scan! go run ./cmd/console/main.go -p <path-of-your-project-to-scan> -o <output-results.json> CLI Options -h, --help help -o, --output-path string file path to store result in json format -p, --path string path to file or directory to scan -d, --payload-path string file path to store source internal representation in JSON format -q, --queries-path string path to directory with queries (default \"./assets/queries\") -v, --verbose verbose scan Next Steps Check how you can easily integrate it into your CI for any project. Explore the output results format and quickly fix the issues detected. Contribution Want to go the next mile and contribute? You're welcome!","title":"Getting Started"},{"location":"getting-started/#installation","text":"There are multiple ways to get KICS up and running:","title":"Installation"},{"location":"getting-started/#docker","text":"KICS is available as a Docker image and can be used as follows: docker pull checkmarx/kics:latest docker run -v {\u200b\u200b\u200b\u200bpath_to_local_folder_to_scan}\u200b\u200b\u200b\u200b:/path checkmarx/kics:latest -p \"/path\" -o \"/path/results.json\" You can provide your own path to the queries folder, otherwise the default folder will be used (default \"./assets/queries\") -q, --queries-path string path to directory with queries (default \"./assets/queries\" - built in the image)","title":"Docker"},{"location":"getting-started/#binary","text":"KICS release process is pretty straightforward. When we're releasing a new version, we'll pack KICS executables for both Linux and Windows operating systems. Our security queries will be included in the ZIP files and tarballs, so that you can scan your IaC code with the out-of-the-box queries So all you need is: Go to KICS releases Download KICS binaries based on your OS Extract files Run kics executable with the cli options as decribed below (note that kics binary should be located in the same folder as queries folder) ./kics -p <path-of-your-project-to-scan> -o <output-results.json>","title":"Binary"},{"location":"getting-started/#build-from-sources","text":"Download and install Go from https://golang.org/dl/ Clone the repository: git clone https://github.com/Checkmarx/kics.git cd kics Kick a scan! go run ./cmd/console/main.go -p <path-of-your-project-to-scan> -o <output-results.json>","title":"Build from Sources"},{"location":"getting-started/#cli-options","text":"-h, --help help -o, --output-path string file path to store result in json format -p, --path string path to file or directory to scan -d, --payload-path string file path to store source internal representation in JSON format -q, --queries-path string path to directory with queries (default \"./assets/queries\") -v, --verbose verbose scan","title":"CLI Options"},{"location":"getting-started/#next-steps","text":"Check how you can easily integrate it into your CI for any project. Explore the output results format and quickly fix the issues detected.","title":"Next Steps"},{"location":"getting-started/#contribution","text":"Want to go the next mile and contribute? You're welcome!","title":"Contribution"},{"location":"integrations/","text":"Integrations TBD","title":"Integrations"},{"location":"integrations/#integrations","text":"TBD","title":"Integrations"},{"location":"queries/","text":"Queries TBD","title":"Queries"},{"location":"queries/#queries","text":"TBD","title":"Queries"},{"location":"results/","text":"Results KICS results are output in clear and simple JSON format. Example: { \"files_scanned\": 4, \"files_failed_to_scan\": 1, \"queries_total\": 227, \"queries_failed_to_execute\": 0, \"queries\": [ { \"query_name\": \"Container Allow Privileg Escalation Is True\", \"query_id\": \"container_allow_privilege_escalation_is_true\", \"severity\": \"MEDIUM\", \"files\": [ { \"file_name\": \"assets/queries/terraform/kubernetes_pod/container_allow_privilege_escalation_is_true/test/positive.tf\", \"line\": 11, \"issue_type\": \"IncorrectValue\", \"search_key\": \"kubernetes_pod[test3].spec.container.allow_privilege_escalation\", \"expected_value\": \"Attribute 'allow_privilege_escalation' is undefined or false\", \"actual_value\": \"Attribute 'allow_privilege_escalation' is true\", \"value\": null } ] } ] }","title":"Results"},{"location":"results/#results","text":"KICS results are output in clear and simple JSON format. Example: { \"files_scanned\": 4, \"files_failed_to_scan\": 1, \"queries_total\": 227, \"queries_failed_to_execute\": 0, \"queries\": [ { \"query_name\": \"Container Allow Privileg Escalation Is True\", \"query_id\": \"container_allow_privilege_escalation_is_true\", \"severity\": \"MEDIUM\", \"files\": [ { \"file_name\": \"assets/queries/terraform/kubernetes_pod/container_allow_privilege_escalation_is_true/test/positive.tf\", \"line\": 11, \"issue_type\": \"IncorrectValue\", \"search_key\": \"kubernetes_pod[test3].spec.container.allow_privilege_escalation\", \"expected_value\": \"Attribute 'allow_privilege_escalation' is undefined or false\", \"actual_value\": \"Attribute 'allow_privilege_escalation' is true\", \"value\": null } ] } ] }","title":"Results"},{"location":"roadmap/","text":"Roadmap TBD","title":"Roadmap"},{"location":"roadmap/#roadmap","text":"TBD","title":"Roadmap"}]}